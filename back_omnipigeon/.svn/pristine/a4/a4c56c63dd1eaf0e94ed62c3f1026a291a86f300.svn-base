<?xml version="1.0" encoding="ISO-8859-1"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.omni</groupId>
    <artifactId>omni-back-end-parent</artifactId>
    <packaging>pom</packaging>
    <name>Omni Back End Project</name>
    <version>1.0.3</version>
    <url>http://51.210.102.173:8081/omniBackendRest</url>
    
    <organization>
        <name>Omni</name>
        <url>https://omnipigeon.com</url>
    </organization>
    <ciManagement>
        <system>Jenkins</system>
        <url>http://51.210.102.173:8081/jenkins/</url>
    </ciManagement>
    <distributionManagement>
        <site>
            <name>DEV</name>
            <url>http://localhost:8080</url>
        </site>
    </distributionManagement>
    
    <properties>
        <endorsed.dir>${project.build.directory}/endorsed</endorsed.dir>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <jacoco.ut.execution.data.file>${project.basedir}/target/jacoco-ut.exec</jacoco.ut.execution.data.file>
        <spring.version>5.0.5.RELEASE</spring.version>
        <spring.security.version>5.0.5.RELEASE</spring.security.version>
        <spring.http.multipart.enabled>true</spring.http.multipart.enabled>
        <spring.session.initialize-schema>always</spring.session.initialize-schema>
        <hibernate.version>5.2.16.Final</hibernate.version>
        <surefireArgLine></surefireArgLine>
        <facebookEndPoint>https://graph.facebook.com/v2.9/me</facebookEndPoint>
        <pwaKey></pwaKey>
        <googleKeyOAuth></googleKeyOAuth>
        <googleReCaptchaPrivateSiteKey></googleReCaptchaPrivateSiteKey>
    </properties>
    <profiles>
        <profile>
            <id>all-back-end</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties/>
            <modules>
                <module>rest</module>
                <module>core</module>
            </modules>
        </profile>
        <profile>
            <id>all-rest</id>
            <properties/>
            <modules>
                <module>rest</module>
            </modules>
        </profile>
        <profile>
            <id>all-core</id>
            <properties/>
            <modules>
                <module>core</module>
            </modules>
        </profile>
             
        <profile>
            <id>env-local</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <apiUrl>http://localhost:8080/</apiUrl>
                <apiName>omniBackendRest</apiName>
                <domaine>http://localhost:8080/</domaine>
                <database>localhost</database>
                <deliveryPath>D:\Dev\Livraison</deliveryPath>
                <serverDomain>https://localhost:4200/</serverDomain>
                <!--<tempDirectory>C:\\dev\\temp</tempDirectory>-->
                   <tempDirectory>/opt/tomcat/temp</tempDirectory>
                <jdbc.url>jdbc:mysql://localhost/pigeonbdd</jdbc.url>
                <jdbc.username>pigeonDev</jdbc.username>
                <jdbc.password>Pige@n2020</jdbc.password>
                <spring.profiles.active>env-local</spring.profiles.active>
                <hibernate.hbm2ddl.auto>update</hibernate.hbm2ddl.auto>
                <hibernate.show_sql>false</hibernate.show_sql>
                <hibernate.format_sql>false</hibernate.format_sql>
                <hibernate.dialect>org.hibernate.dialect.MySQL5InnoDBDialect</hibernate.dialect>
                <hibernate.hbm2ddl.import_files>sql/create/init.sql</hibernate.hbm2ddl.import_files>     
                <imgUrl>http://localhost:8080/image/</imgUrl>
                <docUrl>http://localhost:8080/document/</docUrl>
                <imgFolder>C:/Users/apache-tomcat-9.0.31/webapps/image/</imgFolder>
                <docFolder>C:/Users/apache-tomcat-9.0.31/webapps/document/</docFolder>
              </properties>
        </profile>
        <profile>
            <id>env-dev</id>
            <properties>
                <apiUrl>https://dev.omnipigeon.com/</apiUrl>
                <apiName>pigeonBackendRest</apiName>
                <domaine>https://dev.omnipigeon.com/</domaine>
                <database>dev</database>
                <deliveryPath>/opt/tomcat/webapps/</deliveryPath>
                <serverDomain>https://dev.omnipigeon.com/</serverDomain>
                <tempDirectory>/opt/tomcat/temp</tempDirectory>
                <jdbc.url>jdbc:mysql://localhost/pigeonbdd</jdbc.url>
                <jdbc.username>pigeonDev</jdbc.username>
                <jdbc.password>Pige@n2020</jdbc.password>
                <spring.profiles.active>env-dev</spring.profiles.active>
                <hibernate.hbm2ddl.auto>update</hibernate.hbm2ddl.auto>
                <hibernate.show_sql>false</hibernate.show_sql>
                <hibernate.format_sql>false</hibernate.format_sql>
                <hibernate.dialect>org.hibernate.dialect.MySQL5InnoDBDialect</hibernate.dialect>
                <hibernate.hbm2ddl.import_files>sql/create/init.sql</hibernate.hbm2ddl.import_files>
                <imgUrl>https://dev.back.omnipigeon.com/image/</imgUrl>
                <docUrl>https://dev.back.omnipigeon.com/document/</docUrl>
                <imgFolder>/opt/tomcat/webapps/image/</imgFolder>
                <docFolder>/opt/tomcat/webapps/document/</docFolder>
            </properties>
        </profile>
        <profile>
            <id>env-recette</id>
            <properties>
                <apiUrl>https://recette.omnipigeon.com/</apiUrl>
                <apiName>pigeonBackendRest</apiName>
                <domaine>https://recette.omnipigeon.com/</domaine>
                <database>recette</database>
                <deliveryPath>/opt/tomcat/webapps/</deliveryPath>
                <serverDomain>https://recette.omnipigeon.com/</serverDomain>
                <tempDirectory>/opt/tomcat/temp</tempDirectory>
                <jdbc.url>jdbc:mysql://localhost/pigeonbdd</jdbc.url>
                <jdbc.username>pigeonRecette</jdbc.username>
                <jdbc.password>Pige@n2020</jdbc.password>
                <spring.profiles.active>env-recette</spring.profiles.active>
                <hibernate.hbm2ddl.auto>update</hibernate.hbm2ddl.auto>
                <hibernate.show_sql>false</hibernate.show_sql>
                <hibernate.format_sql>false</hibernate.format_sql>
                <hibernate.dialect>org.hibernate.dialect.MySQL5InnoDBDialect</hibernate.dialect>
                <hibernate.hbm2ddl.import_files>sql/create/init.sql</hibernate.hbm2ddl.import_files>
                <imgUrl>https://recette.back.omnipigeon.com/image/</imgUrl>
                <docUrl>https://recette.back.omnipigeon.com/document/</docUrl>
                <imgFolder>/opt/tomcat/webapps/image/</imgFolder>
                <docFolder>/opt/tomcat/webapps/document/</docFolder>
            </properties>
        </profile> 
        <profile>
            <id>env-preprod</id>
            <properties>
                <apiUrl>https://pp.omnipigeon.com/</apiUrl>
                <apiName>pigeonBackendRest</apiName>
                <domaine>https://pp.omnipigeon.com/</domaine>
                <database>preprod</database>
                <deliveryPath>/opt/tomcat/webapps/</deliveryPath>
                <serverDomain>https://pp.omnipigeon.com/</serverDomain>
                <tempDirectory>/opt/tomcat/temp</tempDirectory>
                <jdbc.url>jdbc:mysql://localhost/pigeonbdd</jdbc.url>
                <jdbc.username>pigeonPProd</jdbc.username>
                <jdbc.password>Pige@n2020</jdbc.password>
                <spring.profiles.active>env-preprod</spring.profiles.active>
                <hibernate.hbm2ddl.auto>update</hibernate.hbm2ddl.auto>
                <hibernate.show_sql>false</hibernate.show_sql>
                <hibernate.format_sql>false</hibernate.format_sql>
                <hibernate.dialect>org.hibernate.dialect.MySQL5InnoDBDialect</hibernate.dialect>
                <hibernate.hbm2ddl.import_files>sql/create/init.sql</hibernate.hbm2ddl.import_files>
                <imgUrl>https://pp.back.omnipigeon.com/image/</imgUrl>
                <docUrl>https://pp.back.omnipigeon.com/document/</docUrl>
                <imgFolder>/opt/tomcat/webapps/image/</imgFolder>
                <docFolder>/opt/tomcat/webapps/document/</docFolder>
            </properties>
        </profile>
        <profile>
            <id>env-prod</id>
            <properties>
                <apiUrl>https://omnipigeon.com/</apiUrl>
                <apiName>pigeonBackendRest</apiName>
                <domaine>https://omnipigeon.com/</domaine>
                <database>prod</database>
                <deliveryPath>/opt/tomcat/webapps/</deliveryPath>
                <serverDomain>https://omnipigeon.com/</serverDomain>
                <tempDirectory>/opt/tomcat/temp</tempDirectory>
                <jdbc.url>jdbc:mysql://localhost/pigeonbdd</jdbc.url>
                <jdbc.username>pigeonProd</jdbc.username>
                <jdbc.password>Pige@n2020</jdbc.password>
                <spring.profiles.active>env-prod</spring.profiles.active>
                <hibernate.hbm2ddl.auto>update</hibernate.hbm2ddl.auto>
                <hibernate.show_sql>false</hibernate.show_sql>
                <hibernate.format_sql>false</hibernate.format_sql>
                <hibernate.dialect>org.hibernate.dialect.MySQL5InnoDBDialect</hibernate.dialect>
                <hibernate.hbm2ddl.import_files>sql/create/init.sql</hibernate.hbm2ddl.import_files>
                <imgUrl>https://back.omnipigeon.com/image/</imgUrl>
                <docUrl>https://back.omnipigeon.com/document/</docUrl>
                <imgFolder>/opt/tomcat/webapps/image/</imgFolder>
                <docFolder>/opt/tomcat/webapps/document/</docFolder>
            </properties>
        </profile>

    </profiles>
    <dependencies>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.16.20</version>
            <type>jar</type>
        </dependency>
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>1.2.17</version>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>3.0.1</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax</groupId>
            <artifactId>javaee-api</artifactId>
            <version>7.0</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>${spring.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <version>0.8.1</version>
        </dependency>
        <dependency>
            <groupId>com.google.api-client</groupId>
            <artifactId>google-api-client</artifactId>
            <version>1.28.0</version>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-jpamodelgen</artifactId>
            <version>5.3.6.Final</version>
        </dependency>
    </dependencies>
    <modules></modules>
    <build>
        <resources>
            <resource>
                <directory>${basedir}/src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
        <testResources>
            <testResource>
                <directory>${basedir}/src/test/resources</directory>
                <filtering>true</filtering>
            </testResource>
        </testResources>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-ant-plugin</artifactId>
                <version>2.4</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-clean-plugin</artifactId>
                <version>3.0.0</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.7.0</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                    <showDeprecation>true</showDeprecation>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-help-plugin</artifactId>
                <version>3.0.1</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-install-plugin</artifactId>
                <version>2.3.1</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.0.2</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>3.0.2</version>
                <configuration>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-site-plugin</artifactId>
                <version>2.1.1</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.22.0</version>
                <configuration>
                    <argLine>@{surefireArgLine} -Xms1024m -Xmx1024m </argLine>                
                    <skipTests>false</skipTests>
                    <failIfNoTests>false</failIfNoTests>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>3.2.0</version>
            </plugin>
            <plugin>
                <groupId>org.jvnet.jax-ws-commons</groupId>
                <artifactId>jaxws-maven-plugin</artifactId>
                <version>2.3</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>3.1.0</version>
                <executions>
                    <execution>
                        <phase>validate</phase>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${endorsed.dir}</outputDirectory>
                            <silent>true</silent>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>javax</groupId>
                                    <artifactId>javaee-endorsed-api</artifactId>
                                    <version>7.0</version>
                                    <type>jar</type>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.8.1</version>
                <configuration>
                    <append>true</append>
                </configuration>
                <executions>
                    <execution>
                        <id>jacoco-initialize</id>
                        <phase>validate</phase>
                        <goals>   
                            <goal>prepare-agent</goal>
                        </goals>
                        <configuration>
                            <append>true</append>
                            <destFile>${jacoco.ut.execution.data.file}</destFile>
                            <propertyName>surefireArgLine</propertyName>
                        </configuration>
                    </execution>
                    <execution>
                        <id>jacoco-test</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                        <configuration>
                            <append>true</append>
                            <dataFile>${jacoco.ut.execution.data.file}</dataFile>
                            <outputDirectory>${project.reporting.outputDirectory}/jacoco-ut</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
    <dependencyManagement/>
    <reporting>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>cobertura-maven-plugin</artifactId>
                <version>2.7</version>
            </plugin>
        </plugins>
    </reporting>
</project>
